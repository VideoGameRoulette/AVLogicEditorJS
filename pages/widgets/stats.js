import { useState, useEffect, useCallback } from "react";
import Head from 'next/head';
import ErrorPage from "components/Errors";

const websocket_endpoint = 'ws://localhost:19906';

const StatTracker = () => {
    const [data, setData] = useState(null);
    const [connected, setConnected] = useState(false);

    const handleConnect = useCallback(() => {
        const appendData = d => {
            if (d === null) return;
            setData(d);
            if (process.env.NODE_ENV !== 'production') console.log("Websocket Data: ", d);
        };

        const socket = new WebSocket(websocket_endpoint);
        socket.onopen = () => {
            setConnected(true);
        };
        socket.onclose = () => {
            setConnected(false);
        };
        socket.onmessage = event => appendData(JSON.parse(event.data));
    }, [setConnected, setData]);

    useEffect(() => {
        handleConnect();
    }, [handleConnect]);

    if (data === null) return <ErrorPage connected={connected} callback={handleConnect} />;

    const { AreaName, CurrentHP, MaxHP, AreaItemPercent, AreaMapPercent, TotalItemPercent, TotalMapPercent, DeathCount } = data;

    return (
        <>
            <Head>
                <title>Stat Tracker | Axiom Verge</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="absolute w-full h-full flex">
                <div className="h-60 flex flex-col border-[16px] border-inner justify-center items-start bg-[#240B22] gap-1 text-gray-200 p-4 font-bold">
                    <div id="areaname">Area Name: {AreaName}</div>
                    <div id="currenthp">HP: {CurrentHP}/{MaxHP}</div>
                    <div id="areaitems">Area Items: {AreaItemPercent}%</div>
                    <div id="areascreens">Area Map: {AreaMapPercent}%</div>
                    <div id="totalitems">Total Items: {TotalItemPercent}%</div>
                    <div id="totalscreens">Total Map: {TotalMapPercent}%</div>
                    <div id="deathcount">Deaths: {DeathCount}</div>
                </div>
            </div>
        </>
    );
}

export default StatTracker;